name: NuGet Component Package Deploy

on:
  push:
    tags:
      - 'v*-chains'
      - 'v*-pubsub'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x
    
    - name: Extract component from tag
      id: get_info
      run: |
        REF="${GITHUB_REF#refs/tags/v}"
        echo "COMPONENT=$(echo $REF | cut -d'-' -f2)" >> $GITHUB_OUTPUT
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: Test specific component
      if: steps.get_info.outputs.COMPONENT == 'chains'
      run: |
        dotnet test tests/Forma.Tests/Forma.Tests.csproj --configuration Release --no-build --filter "FullyQualifiedName~Forma.Tests.Chains"
        
    - name: Test specific component
      if: steps.get_info.outputs.COMPONENT == 'pubsub'
      run: |
        dotnet test tests/Forma.Tests/Forma.Tests.csproj --configuration Release --no-build --filter "FullyQualifiedName~Forma.Tests.PubSub"
    
    # Nerdbank.GitVersioning gestisce automaticamente il versioning, quindi non è più necessario aggiornare manualmente le versioni
      
    - name: Pack Chains
      if: steps.get_info.outputs.COMPONENT == 'chains'
      run: dotnet pack src/Forma.Chains/Forma.Chains.csproj -c Release -o packages -p:UseProjectReferences=false
      
    - name: Pack PubSub InMemory
      if: steps.get_info.outputs.COMPONENT == 'pubsub'
      run: dotnet pack src/Forma.PubSub.InMemory/Forma.PubSub.InMemory.csproj -c Release -o packages -p:UseProjectReferences=false
      
    - name: Push to NuGet
      run: dotnet nuget push "./packages/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
      if: success()
